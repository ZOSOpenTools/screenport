diff --git a/acls.c b/acls.c
index 1de8e89..ded275e 100644
--- a/acls.c
+++ b/acls.c
@@ -529,7 +529,11 @@ char *name, *pw1, *pw2;
 	    }
 	}
       else
+#ifdef __MVS__
+        pass = ""; //TODO
+#else
         pass = pp->pw_passwd;
+#endif
 #ifdef SHADOWPW
       for (t = 0; t < 13; t++)
         {
diff --git a/attacher.c b/attacher.c
index 18ba43c..097a14e 100644
--- a/attacher.c
+++ b/attacher.c
@@ -891,7 +891,11 @@ screen_builtin_lck()
     {
 #endif
   using_pam = 0;
+#ifndef __MVS__
   pass = ppp->pw_passwd;
+#else
+  pass = "";
+#endif
   if (pass == 0 || *pass == 0)
     {
       if ((pass = getpass("Key:   ")))
@@ -927,14 +931,20 @@ screen_builtin_lck()
           sleep(2);
           return;
 	}
+#ifndef __MVS__
       pass = ppp->pw_passwd = SaveStr(pass);
+#endif
     }
 #ifdef USE_PAM
     }
 #endif
 
   debug("screen_builtin_lck looking in gcos field\n");
+#ifndef __MVS__
   strncpy(fullname, ppp->pw_gecos, sizeof(fullname) - 9);
+#else
+  strncpy(fullname, "N/A",  sizeof(fullname) - 9);
+#endif
   fullname[sizeof(fullname) - 9] = 0;
 
   if ((cp1 = index(fullname, ',')) != NULL)
diff --git a/os.h b/os.h
index 2a1c2ca..71bef27 100644
--- a/os.h
+++ b/os.h
@@ -30,14 +30,16 @@
 #include <stdio.h>
 #include <errno.h>
 
+#ifndef __MVS__
 #include <sys/param.h>
+#endif
 
 /* In strict ANSI mode, HP-UX machines define __hpux but not hpux */
 #if defined(__hpux) && !defined(hpux)
 # define hpux
 #endif
 
-#if defined(__bsdi__) || defined(__386BSD__) || defined(_CX_UX) || defined(hpux) || defined(_IBMR2) || defined(linux)
+#if defined(__bsdi__) || defined(__386BSD__) || defined(_CX_UX) || defined(hpux) || defined(_IBMR2) || defined(linux) || defined(__MVS__)
 # include <signal.h>
 #endif /* __bsdi__ || __386BSD__ || _CX_UX || hpux || _IBMR2 || linux */
 
@@ -230,7 +232,7 @@ extern int errno;
  * Joe Traister: On AIX4, programs like irc won't work if screen
  * uses TIOCPKT (select fails to return on pty read).
  */
-#if defined(sgi) || defined(DGUX) || defined(_IBMR2)
+#if defined(sgi) || defined(DGUX) || defined(_IBMR2) || defined(__MVS__)
 # undef TIOCPKT
 #endif
 
@@ -249,10 +251,10 @@ extern int errno;
   typedef int slot_t;
 #endif
 
-#if defined(UTMPOK) || defined(BUGGYGETLOGIN)
-# if defined(SVR4) && !defined(DGUX) && !defined(__hpux) && !defined(linux)
+#if (defined(UTMPOK) || defined(BUGGYGETLOGIN))
+# if (defined(SVR4) || defined(__MVS__))  && !defined(DGUX) && !defined(__hpux) && !defined(linux)
 #  include <utmpx.h>
-#  define UTMPFILE	UTMPX_FILE
+#  define UTMPFILE	__UTMPX_FILE
 #  define utmp		utmpx
 #  define getutent	getutxent
 #  define getutid	getutxid
@@ -260,7 +262,11 @@ extern int errno;
 #  define pututline	pututxline
 #  define setutent	setutxent
 #  define endutent	endutxent
-#  define ut_time	ut_xtime
+#  define ut_time ut_tv.tv_sec
+# define e_termination ut_e_termination
+# define e_exit ut_e_exit
+# define ut_addr ut_addr_v6[0]
+#  define ut_name ut_user
 # else /* SVR4 */
 #  include <utmp.h>
 # endif /* SVR4 */
@@ -401,7 +407,7 @@ extern int errno;
 #endif
 
 /* Geeeee, reverse it? */
-#if defined(SVR4) || (defined(SYSV) && defined(ISC)) || defined(_AIX) || defined(linux) || defined(ultrix) || defined(__386BSD__) || defined(__bsdi__) || defined(POSIX) || defined(NeXT)
+#if defined(SVR4) || (defined(SYSV) && defined(ISC)) || defined(_AIX) || defined(__MVS__) || defined(linux) || defined(ultrix) || defined(__386BSD__) || defined(__bsdi__) || defined(POSIX) || defined(NeXT)
 # define SIGHASARG
 #endif
 
diff --git a/osdef.h.in b/osdef.h.in
index 6ddbd66..074c0c1 100644
--- a/osdef.h.in
+++ b/osdef.h.in
@@ -153,7 +153,7 @@ extern int   socket __P((int, int, int));
 extern int   connect __P((int, struct sockaddr *, int));
 extern int   bind __P((int, struct sockaddr *, int));
 extern int   listen __P((int, int));
-#ifdef _AIX
+#if defined(__MVS__)
 extern int   accept __P((int, struct sockaddr *, socklen_t *));
 #else
 extern int   accept __P((int, struct sockaddr *, int *));
diff --git a/process.c b/process.c
index 004b22a..c632a70 100644
--- a/process.c
+++ b/process.c
@@ -46,7 +46,7 @@
 
 /* for solaris 2.1, Unixware (SVR4.2) and possibly others: */
 #ifdef HAVE_STROPTS_H
-# include <sys/stropts.h>
+# include <stropts.h>
 #endif
 
 #include "screen.h"
@@ -4055,7 +4055,9 @@ int key;
 	    break;
 	  ApplyAttrColor(i, &mchar_so);
 	  WindowChanged((struct win *)0, 0);
+#ifndef __MVS__
 	  debug2("--> %x %x\n", mchar_so.attr, mchar_so.color);
+#endif
 	}
       if (msgok)
 #ifdef COLOR
diff --git a/pty.c b/pty.c
index 6791fd5..96042fe 100644
--- a/pty.c
+++ b/pty.c
@@ -44,7 +44,7 @@
 
 /* for solaris 2.1, Unixware (SVR4.2) and possibly others */
 #ifdef HAVE_STROPTS_H
-# include <sys/stropts.h>
+# include <stropts.h>
 #endif
 
 #if defined(sun) && defined(LOCKPTY) && !defined(TIOCEXCL)
@@ -67,10 +67,10 @@
  * if no PTYRANGE[01] is in the config file, we pick a default
  */
 #ifndef PTYRANGE0
-# define PTYRANGE0 "qpr"
+# define PTYRANGE0 "012"
 #endif
 #ifndef PTYRANGE1
-# define PTYRANGE1 "0123456789abcdef"
+# define PTYRANGE1 "0123456789"
 #endif
 
 /* SVR4 pseudo ttys don't seem to work with SCO-5 */
@@ -88,12 +88,12 @@ static char PtyName[32], TtyName[32];
 static char PtyProto[] = "/dev/ptym/ptyXY";
 static char TtyProto[] = "/dev/pty/ttyXY";
 # else
-#  ifdef M_UNIX
+#  if defined(M_UNIX)
 static char PtyProto[] = "/dev/ptypXY";
 static char TtyProto[] = "/dev/ttypXY";
 #  else
-static char PtyProto[] = "/dev/ptyXY";
-static char TtyProto[] = "/dev/ttyXY";
+static char PtyProto[] = "/dev/ptyp00XY";
+static char TtyProto[] = "/dev/ttyp00XY";
 #  endif
 # endif /* hpux */
 #endif
@@ -318,7 +318,7 @@ char **ttyn;
       return -1;
     }
   initmaster(f);
-# ifdef _IBMR2
+# if defined(_IBMR2)
   pty_preopen = 1;
 # endif
   *ttyn = TtyName;
@@ -369,30 +369,18 @@ char **ttyn;
 	  debug1("OpenPTY tries '%s'\n", PtyName);
 	  if ((f = open(PtyName, O_RDWR | O_NOCTTY)) == -1)
 	    continue;
+	  debug1("Bad0 tries '%s'\n", PtyName);
 	  q[0] = *l;
 	  q[1] = *d;
 	  if (eff_uid && access(TtyName, R_OK | W_OK))
 	    {
+	  debug1("Bad1 tries '%s'\n", PtyName);
 	      close(f);
 	      continue;
 	    }
-#if defined(sun) && defined(TIOCGPGRP) && !defined(SUNOS3)
-	  /* Hack to ensure that the slave side of the pty is
-	   * unused. May not work in anything other than SunOS4.1
-	   */
-	    {
-	      int pgrp;
-
-	      /* tcgetpgrp does not work (uses TIOCGETPGRP)! */
-	      if (ioctl(f, TIOCGPGRP, (char *)&pgrp) != -1 || errno != EIO)
-		{
-		  close(f);
-		  continue;
-		}
-	    }
-#endif
 	  initmaster(f);
 	  *ttyn = TtyName;
+	  debug1("Good tries '%s'\n", PtyName);
 	  return f;
 	}
     }
diff --git a/resize.c b/resize.c
index 070d3ed..e2c0ff4 100644
--- a/resize.c
+++ b/resize.c
@@ -997,8 +997,10 @@ int wi, he, hi;
   /* store new size */
   p->w_width = wi;
   p->w_height = he;
+//#ifndef __MVS__
   if(p->w_scrollback_height > hi)
     p->w_scrollback_height = hi;
+//#endif
 #ifdef COPY_PASTE
   p->w_histidx = 0;
   p->w_histheight = hi;
diff --git a/screen.c b/screen.c
index 8bce303..554f578 100644
--- a/screen.c
+++ b/screen.c
@@ -39,7 +39,7 @@
  */
 
 #include <sys/types.h>
-#ifdef _AIX
+#if defined(__MVS__)
 #include <sys/socket.h>
 #endif
 #include <ctype.h>
@@ -68,8 +68,12 @@
 #include "config.h"
 
 #ifdef HAVE_STROPTS_H
+#ifdef __MVS__
+# include <stropts.h>
+#else
 # include <sys/stropts.h>
 #endif
+#endif
 
 #if defined(SYSV) && !defined(ISC)
 # include <sys/utsname.h>
@@ -313,6 +317,8 @@ struct passwd *ppp;
 #ifdef SHADOWPW
 pw_try_again:
 #endif
+
+#ifndef __MVS__
   n = 0;
   if (ppp->pw_passwd[0] == '#' && ppp->pw_passwd[1] == '#' && strcmp(ppp->pw_passwd + 2, ppp->pw_name) == 0)
     n = 13;
@@ -324,6 +330,7 @@ pw_try_again:
 	     (c >= 'A' && c <= 'Z')))
 	break;
   }
+#endif
 
 #ifdef SHADOWPW
   /* try to determine real password */
@@ -339,11 +346,13 @@ pw_try_again:
       endspent();	/* this should delete all buffers ... */
   }
 #endif
+#ifndef __MVS__
   if (n < 13)
     ppp->pw_passwd = 0;
 #ifdef linux
   if (ppp->pw_passwd && strlen(ppp->pw_passwd) == 13 + 11)
     ppp->pw_passwd[13] = 0;	/* beware of linux's long passwords */
+#endif
 #endif
 
   return ppp;
@@ -390,7 +399,7 @@ int main(int ac, char** av)
 #if (defined(AUX) || defined(_AUX_SOURCE)) && defined(POSIX)
   setcompat(COMPAT_POSIX|COMPAT_BSDPROT); /* turn on seteuid support */
 #endif
-#if defined(sun) && defined(SVR4)
+#if (defined(sun) && defined(SVR4))
   {
     /* Solaris' login blocks SIGHUP! This is _very bad_ */
     sigset_t sset;
diff --git a/tty.sh b/tty.sh
index d408720..26106fe 100644
--- a/tty.sh
+++ b/tty.sh
@@ -84,8 +84,12 @@ exit 0
 
 #include "config.h"
 #ifdef HAVE_STROPTS_H
+#ifdef __MVS__
+#include <stropts.h>	/* for I_POP */
+#else
 #include <sys/stropts.h>	/* for I_POP */
 #endif
+#endif
 
 #include "screen.h"
 #include "extern.h"
@@ -206,7 +210,7 @@ int OpenTTY(char *line, char *opt)
 #endif
   SetTTY(f, &Mode);
 
-#if defined(linux) && defined(TIOCMSET)
+#if (defined(linux) || defined(__MVS__)) && defined(TIOCMSET)
   {
     int mcs = 0;
     ioctl(f, TIOCMGET, &mcs);
diff --git a/utmp.c b/utmp.c
index bb56e2c..50bd11e 100644
--- a/utmp.c
+++ b/utmp.c
@@ -38,6 +38,7 @@
 #include <utempter.h>
 #endif
 
+#include <utmpx.h>
 
 extern struct display *display;
 #ifdef CAREFULUTMP
@@ -88,7 +89,7 @@ static void makeuser __P((struct utmp *, char *, char *, int));
 static void makedead __P((struct utmp *));
 static int  pututslot __P((slot_t, struct utmp *, char *, struct win *));
 static struct utmp *getutslot __P((slot_t));
-#ifndef GETUTENT
+#if defined(GETUTENT) && !defined(__MVS__)
 static struct utmp *getutent __P((void));
 static void endutent __P((void));
 static int  initutmp __P((void));
@@ -546,7 +547,7 @@ struct win *wi;
  *  routines using the getut* api
  */
 
-#ifdef GETUTENT
+#if defined(GETUTENT) || defined(__MVS__)
 
 #define SLOT_USED(u) (u->ut_type == USER_PROCESS)
 
