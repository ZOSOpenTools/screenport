diff --git a/acls.c b/acls.c
index 1de8e89..ded275e 100644
--- a/acls.c
+++ b/acls.c
@@ -529,7 +529,11 @@ char *name, *pw1, *pw2;
 	    }
 	}
       else
+#ifdef __MVS__
+        pass = ""; //TODO
+#else
         pass = pp->pw_passwd;
+#endif
 #ifdef SHADOWPW
       for (t = 0; t < 13; t++)
         {
diff --git a/attacher.c b/attacher.c
index 18ba43c..097a14e 100644
--- a/attacher.c
+++ b/attacher.c
@@ -891,7 +891,11 @@ screen_builtin_lck()
     {
 #endif
   using_pam = 0;
+#ifndef __MVS__
   pass = ppp->pw_passwd;
+#else
+  pass = "";
+#endif
   if (pass == 0 || *pass == 0)
     {
       if ((pass = getpass("Key:   ")))
@@ -927,14 +931,20 @@ screen_builtin_lck()
           sleep(2);
           return;
 	}
+#ifndef __MVS__
       pass = ppp->pw_passwd = SaveStr(pass);
+#endif
     }
 #ifdef USE_PAM
     }
 #endif
 
   debug("screen_builtin_lck looking in gcos field\n");
+#ifndef __MVS__
   strncpy(fullname, ppp->pw_gecos, sizeof(fullname) - 9);
+#else
+  strncpy(fullname, "N/A",  sizeof(fullname) - 9);
+#endif
   fullname[sizeof(fullname) - 9] = 0;
 
   if ((cp1 = index(fullname, ',')) != NULL)
diff --git a/os.h b/os.h
index 2a1c2ca..71bef27 100644
--- a/os.h
+++ b/os.h
@@ -30,14 +30,16 @@
 #include <stdio.h>
 #include <errno.h>
 
+#ifndef __MVS__
 #include <sys/param.h>
+#endif
 
 /* In strict ANSI mode, HP-UX machines define __hpux but not hpux */
 #if defined(__hpux) && !defined(hpux)
 # define hpux
 #endif
 
-#if defined(__bsdi__) || defined(__386BSD__) || defined(_CX_UX) || defined(hpux) || defined(_IBMR2) || defined(linux)
+#if defined(__bsdi__) || defined(__386BSD__) || defined(_CX_UX) || defined(hpux) || defined(_IBMR2) || defined(linux) || defined(__MVS__)
 # include <signal.h>
 #endif /* __bsdi__ || __386BSD__ || _CX_UX || hpux || _IBMR2 || linux */
 
@@ -230,7 +232,7 @@ extern int errno;
  * Joe Traister: On AIX4, programs like irc won't work if screen
  * uses TIOCPKT (select fails to return on pty read).
  */
-#if defined(sgi) || defined(DGUX) || defined(_IBMR2)
+#if defined(sgi) || defined(DGUX) || defined(_IBMR2) || defined(__MVS__)
 # undef TIOCPKT
 #endif
 
@@ -249,10 +251,10 @@ extern int errno;
   typedef int slot_t;
 #endif
 
-#if defined(UTMPOK) || defined(BUGGYGETLOGIN)
-# if defined(SVR4) && !defined(DGUX) && !defined(__hpux) && !defined(linux)
+#if (defined(UTMPOK) || defined(BUGGYGETLOGIN))
+# if (defined(SVR4) || defined(__MVS__))  && !defined(DGUX) && !defined(__hpux) && !defined(linux)
 #  include <utmpx.h>
-#  define UTMPFILE	UTMPX_FILE
+#  define UTMPFILE	__UTMPX_FILE
 #  define utmp		utmpx
 #  define getutent	getutxent
 #  define getutid	getutxid
@@ -260,7 +262,11 @@ extern int errno;
 #  define pututline	pututxline
 #  define setutent	setutxent
 #  define endutent	endutxent
-#  define ut_time	ut_xtime
+#  define ut_time ut_tv.tv_sec
+# define e_termination ut_e_termination
+# define e_exit ut_e_exit
+# define ut_addr ut_addr_v6[0]
+#  define ut_name ut_user
 # else /* SVR4 */
 #  include <utmp.h>
 # endif /* SVR4 */
@@ -401,7 +407,7 @@ extern int errno;
 #endif
 
 /* Geeeee, reverse it? */
-#if defined(SVR4) || (defined(SYSV) && defined(ISC)) || defined(_AIX) || defined(linux) || defined(ultrix) || defined(__386BSD__) || defined(__bsdi__) || defined(POSIX) || defined(NeXT)
+#if defined(SVR4) || (defined(SYSV) && defined(ISC)) || defined(_AIX) || defined(__MVS__) || defined(linux) || defined(ultrix) || defined(__386BSD__) || defined(__bsdi__) || defined(POSIX) || defined(NeXT)
 # define SIGHASARG
 #endif
 
diff --git a/osdef.h.in b/osdef.h.in
index 6ddbd66..074c0c1 100644
--- a/osdef.h.in
+++ b/osdef.h.in
@@ -153,7 +153,7 @@ extern int   socket __P((int, int, int));
 extern int   connect __P((int, struct sockaddr *, int));
 extern int   bind __P((int, struct sockaddr *, int));
 extern int   listen __P((int, int));
-#ifdef _AIX
+#if defined(__MVS__)
 extern int   accept __P((int, struct sockaddr *, socklen_t *));
 #else
 extern int   accept __P((int, struct sockaddr *, int *));
diff --git a/process.c b/process.c
index 004b22a..c632a70 100644
--- a/process.c
+++ b/process.c
@@ -46,7 +46,7 @@
 
 /* for solaris 2.1, Unixware (SVR4.2) and possibly others: */
 #ifdef HAVE_STROPTS_H
-# include <sys/stropts.h>
+# include <stropts.h>
 #endif
 
 #include "screen.h"
@@ -4055,7 +4055,9 @@ int key;
 	    break;
 	  ApplyAttrColor(i, &mchar_so);
 	  WindowChanged((struct win *)0, 0);
+#ifndef __MVS__
 	  debug2("--> %x %x\n", mchar_so.attr, mchar_so.color);
+#endif
 	}
       if (msgok)
 #ifdef COLOR
